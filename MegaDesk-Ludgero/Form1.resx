<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDCRXhpZgAATU0AKgAAAAgAAwE7AAIAAAANAAAAModpAAQAAAAB
        AAAAQJydAAEAAAAaAAAAoAAAAABFbW1hIEx1ZGdlcm8AAAAEkAMAAgAAABQAAAB2kAQAAgAAABQAAACK
        kpEAAgAAAAM2NAAAkpIAAgAAAAM2NAAAAAAAADIwMjM6MDU6MTIgMjI6MDg6NDAAMjAyMzowNToxMiAy
        MjowODo0MAAAAEUAbQBtAGEAIABMAHUAZABnAGUAcgBvAAAA/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJ
        CQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsU
        KhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgA
        2gDUAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
        BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2
        Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEB
        AQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
        IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2Rl
        ZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+gKKKKACiiigAooooAKKKKACiiig
        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
        oAKKKKACiiigAooooA//2Q==
</value>
  </data>
</root>